{"version":3,"sources":["components/NavBar.js","components/axios.js","components/AnimeDetails.js","components/Row.js","components/requests.js","components/Home.js","components/AnimeItem.js","components/Spinner.js","components/Back.js","components/AnimeGrid.js","components/Pagination.js","components/Search.js","components/About.js","pages/Highestrated.js","pages/Mostpopular.js","pages/Trending.js","pages/Topupcoming.js","pages/Topcurrent.js","pages/Categories.js","pages/Characters.js","pages/Saga.js","pages/Episodes.js","App.js","serviceWorker.js","index.js","components/img/missing.jpg","components/img/logo.png","components/img/default_cover.png","components/img/spinner3.gif"],"names":["NavBar","useState","query","setQuery","setPageOffset","history","useHistory","className","href","src","logo","alt","type","placeholder","value","onChange","e","q","target","push","pathname","search","state","term","instance","axios","create","baseURL","AnimeDetails","match","isLoading","setisLoading","movie","setMovie","movieId","setMovieId","genres","setGenres","characters","setCharacters","saga","setSaga","lightboxOpen","setLightBox","fetchUrl","params","slug","fetchGenresUrl","fetchSagaUrl","id","fetchCharactersUrl","rateColor","attributes","averageRating","rainbow","i","cols","length","useStylesBootstrap","makeStyles","theme","arrow","color","palette","common","black","tooltip","backgroundColor","BootstrapTooltip","props","classes","Tooltip","useEffect","a","get","resp","data","fetchMovieData","tempgenre","included","forEach","element","sort","b","localeCompare","description","document","getElementById","coverImage","default_cover","large","posterImage","small","canonicalTitle","startDate","split","style","name","onClick","classList","toggle","to","Star","yellow","popularityRank","Favorite","red","ratingRank","map","genre","index","key","title","url","youtubeVideoId","altTag","startIndex","showResourceCount","onCloseCallback","window","scrollTo","PlayArrow","titles","en","en_jp","en_us","ja_jp","subtype","episodeCount","status","ageRatingGuide","episodeLength","undefined","character","TransitionComponent","Zoom","placement","image","original","missing","s","MovieSharp","Row","movies","setMovies","request","requests","fetchMostPopular","fetchHighestRated","fetchTrendingThisWeek","fetchTopCurrent","fetchTopUpcoming","fetchGenreInfos","fetchGenreNewlyReleased","fetchGenreMostPopular","fetchGenreTrending","Home","AnimeItem","item","medium","showType","Spinner","spinner","width","margin","display","Back","goBack","ArrowBack","AnimeGrid","items","class","Pagination","prev","next","last","first","handlePage","itemsNb","Math","ceil","FirstPageTwoTone","disabled","SkipPreviousTwoTone","SkipNextTwoTone","LastPageTwoTone","Search","location","useLocation","setItems","setIsLoading","PageOffset","setNext","setPrev","setLast","setFirst","setItemsNb","SEARCH_API","links","meta","count","p","About","Highestrated","Mostpopular","Trending","Topupcoming","console","log","Topcurrent","Categories","category","useParams","setDescription","fetchCategoryUrl","fetchCategorydescUrl","catTitle","respCatMov","respCatDesc","Characters","movieid","movieTitle","languages","setLanguages","selectedlanguage","setSelectedLanguage","casting","setCasting","hasMore","setHasMore","fetchLangsUrl","fetchCharsUrl","infos","loadMore","arr","concat","Map","JSON","stringify","values","Object","assign","person_id","relationships","person","char_id","j","reqLangs","fetchLangData","for","options","selectedIndex","text","lang","selected","char","atl","Saga","stringified","role","role_lablel","join","replace","role_id","destination","attrib_id","Episodes","result","thumbnail","number","App","path","exact","component","Boolean","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.3d50b168.chunk.js","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport { useHistory } from 'react-router';\r\n\r\nimport './NavBar.css'\r\nimport logo from './img/logo.png'\r\n\r\n  const NavBar = () => {\r\n\r\n  const [items,setItems] = useState([])\r\n  const [text,setText] = useState('')\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [query, setQuery] = useState('');\r\n  const [error, setError] = useState(false);\r\n\r\n  const [Filter,setFilter] = useState('text');\r\n  const [Media,setMediaType] = useState('anime');\r\n  const [PageLimit,setPageLimit] = useState(10);\r\n  const [PageOffset, setPageOffset] = useState(0);\r\n  const [currentPage,setCurrentPage] = useState(1);\r\n  const [PagesCount,setPagesCount] = useState(0);\r\n\r\n  const history = useHistory();\r\n\r\n  // const SEARCH_API = `https://kitsu.io/api/edge/anime?fields[${Media}]=slug,canonicalTitle,titles,posterImage,description,averageRating,startDate,popularityRank,ratingRank,youtubeVideoId&filter[${Filter}]=${query}&page[offset]=${PageOffset}&page[limit]=${PageLimit}`\r\n\r\n  // const fetchData = async (api_url) => {\r\n  //       try {\r\n  //         const resp = await axios.get(api_url,\r\n  //         {\r\n  //           headers:{\r\n  //             'Accept': 'application/vnd.api+json',\r\n  //             'Content-Type': 'application/vnd.api+json'\r\n  //         }\r\n  //       });\r\n      \r\n  //           setIsLoading(true);\r\n  //           setItems(resp.data.data);\r\n  //           setPagesCount(resp.data.meta.count);\r\n  //           setIsLoading(false);\r\n  //           // console.log(items,'items');\r\n  //           // console.log(resp,'resp');\r\n      \r\n  //     }catch (err) {\r\n  //           // Handle Error Here\r\n  //           console.error(err);\r\n  //       }\r\n  //       return (items)\r\n  //     };\r\n      \r\n    // useEffect (() => \r\n    // {\r\n    // fetchData(SEARCH_API)\r\n    // },[query])\r\n\r\n    const onSearchChange = (q) => {\r\n    // setText(q); \r\n    setQuery(q);\r\n    setPageOffset(0); //reset page offset so fetched anime would be displayed starting from 0\r\n    if (q =='') history.push(\"/\")\r\n    else {\r\n          history.push({\r\n          pathname: '/Search',\r\n          search: `?query=${q}`,\r\n          state: { term: q }\r\n    })\r\n  }\r\n\r\n    }\r\n    \r\n        return (\r\n        <nav className=\"NavBar\">\r\n          <div className=\"logo-cnt\">\r\n            <a href=\"/\">\r\n            <img className=\"logo\" src={logo} alt=\"Logo\">\r\n            </img>\r\n            </a>\r\n          </div>          \r\n\r\n            <input\r\n              type='text'\r\n              className='search-control'\r\n              placeholder='Search By title, character, voice actor ...'\r\n              value={query}\r\n              onChange={(e) => onSearchChange(e.target.value)}\r\n              // autoFocus\r\n           />\r\n          <span className=\"brand\">My AnimeList</span>\r\n          <span className='author'>By Amin Hammami</span>\r\n        </nav>\r\n        )}\r\nexport default NavBar;","import axios from \"axios\"\r\n\r\nconst instance = axios.create({\r\n\r\n    baseURL: \"https:kitsu.io/api/edge/\"\r\n});\r\n\r\nexport default instance;","import React from 'react';\r\nimport {useState, useEffect} from 'react';\r\nimport {Link, useHistory} from 'react-router-dom';\r\nimport axios from './axios'\r\nimport './AnimeDetails.css'\r\nimport { Star,Favorite, ImageOutlined,ArrowBackIcon } from '@material-ui/icons';\r\nimport { Tooltip,Zoom, makeStyles } from '@material-ui/core';\r\nimport { yellow,red } from '@material-ui/core/colors';\r\nimport  ReactImageVideoLightbox from '../../node_modules/react-image-video-lightbox';\r\nimport  default_cover from '../components/img/default_cover.png'\r\nimport missing from '../components/img/missing.jpg'\r\nimport {PlayArrow, MovieSharp} from '@material-ui/icons';\r\n\r\nfunction AnimeDetails({ match }) {\r\n\r\nconst [isLoading, setisLoading]  = useState(false);\r\nconst [movie, setMovie]  = useState([]);\r\nconst [movieId, setMovieId]  = useState('');\r\nconst [genres, setGenres]  = useState([]);\r\nconst [characters, setCharacters]  = useState([]);\r\nconst [saga, setSaga]  = useState([]);\r\nconst [lightboxOpen,setLightBox] = useState(false);\r\n\r\nconst fetchUrl = `https://kitsu.io/api/edge/anime?fields[categories]=slug,title&filter[slug]=${match.params.slug}&include=categories,animeProductions.producer`\r\nconst fetchGenresUrl = `https://kitsu.io/api/edge/anime?fields[categories]=slug,title&filter[slug]=${match.params.slug}&include=categories`\r\nconst fetchSagaUrl = `https://kitsu.io/api/edge/media-relationships?filter[source_id]=${movie.id}&filter[source_type]=Anime&include=destination&page[limit]=4&sort=role`\r\nconst fetchCharactersUrl = `https://kitsu.io/api/edge/castings?filter[media_id]=${movie.id}&filter[media_type]=Anime&filter[is_character]=true&filter[language]=Japanese&include=character&page[limit]=4&sort=-featured`\r\nconst rateColor = movie.attributes?.averageRating && movie.attributes?.averageRating <30 ? 'red' :\r\n(movie.attributes?.averageRating && movie.attributes?.averageRating >=30 && movie.attributes?.averageRating && movie.attributes?.averageRating < 80 ) ? 'orange' : '#1abc9c'; \r\nlet history = useHistory()\r\n\r\nconst rainbow = (i) => {\r\n    let cols = [\"#f44336\",\"#ff9800\",\"#4caf50\",\"#2196f3\",\"#3f51b5\",\"#9e9e9e\"]\r\n    const res = (i+1) > cols.length ? cols[i % (cols.length)] : cols[i]\r\n    return (res)\r\n}\r\n\r\n//* Custom Black Background Tooltip START\r\n\r\nconst useStylesBootstrap = makeStyles((theme) => ({\r\n    arrow: {\r\n      color: theme.palette.common.black,\r\n    },\r\n    tooltip: {\r\n      backgroundColor: theme.palette.common.black,\r\n    },\r\n  }));\r\n  \r\n  function BootstrapTooltip(props) {\r\n    const classes = useStylesBootstrap();\r\n  \r\n    return <Tooltip arrow classes={classes} {...props} />;\r\n  }\r\n    //* Custom Black Background Tooltip END\r\n\r\n/* \r\n ? Fetch Anime attributes\r\n*/\r\nuseEffect(() => {\r\n    async function fetchMovieData() {\r\n        setisLoading(true);\r\n        const resp = await axios.get(fetchUrl);\r\n        setisLoading(false);\r\n        setMovie(resp.data.data[0]);\r\n        setMovieId(resp.data.data[0].id);\r\n        return movie\r\n    }\r\n    fetchMovieData();\r\n},[])\r\n\r\n// ?fetch anime genre & producers at once\r\n\r\nuseEffect(() => {\r\n    async function fetchMovieData() {\r\n        setisLoading(true);\r\n        const resp = await axios.get(fetchGenresUrl);\r\n        const tempgenre = []\r\n        resp.data.included.forEach(element => {\r\n            let tmp = (element.type ==='categories') ? (tempgenre.push(element.attributes)) : ''\r\n        });\r\n        //* genres alphabetically\r\n        tempgenre.sort((a, b) => a.slug.localeCompare(b.slug))\r\n        setGenres(tempgenre)\r\n        setisLoading(false);\r\n        return genres\r\n    }\r\n    fetchMovieData();\r\n},[movie])\r\n\r\n//*fetch anime characters\r\n\r\nuseEffect(() => {\r\n        setisLoading(true);\r\n    async function fetchMovieData() {\r\n        const resp = await axios.get(fetchCharactersUrl);\r\n        setisLoading(false);\r\n        setCharacters(resp.data.included);\r\n        return characters\r\n    }\r\n    fetchMovieData();\r\n},[movie])\r\n\r\n//*fetch Saga infos\r\nuseEffect(() => {\r\n    async function fetchMovieData() {\r\n        setisLoading(true);\r\n        const resp = await axios.get(fetchSagaUrl);\r\n        setisLoading(false);\r\n        setSaga(resp.data.included);\r\n        return saga\r\n    }\r\n    fetchMovieData();\r\n},[movie])\r\n\r\nconst description = document.getElementById(\"description\");\r\nconst handleExpand = () =>  {description.classList.toggle(\"reduced\")}\r\n\r\n//* Todo format dates to season\r\n// let regexp = /(\\d{4})-(\\d{2})-(\\d{2})/;\r\n// let result = (movie.attributes.startDate).match(regexp);\r\n// console.log(\"year: \"+result[0]+\"month: \"+result[1]+\"day: \"+result[2])\r\n\r\n    return (\r\n        <div id=\"global\">\r\n            <div id=\"wrapper\">\r\n                    <div className=\"cover-wrap\">\r\n                      <img src={(movie?.attributes?.coverImage) === null ?  default_cover : movie?.attributes?.coverImage?.large} alt=\"\" className=\"poster\"/>\r\n                      <div className=\"overlay\">\r\n                      </div>\r\n                      \r\n                      {/* <div className=\"details-wrap\">\r\n                          <div className=\"detail\">\r\n                          <h3>{movie?.attributes?.canonicalTitle}</h3>\r\n                            <div className=\"metadata\">\r\n                                <span>{movie?.attributes?.ageRatingGuide}</span>\r\n                                <span>{movie?.attributes?.createdAt.split('-')[0]}</span>\r\n                                <span>{movie?.attributes?.ageRatingGuide}</span>\r\n                                <span>{movie?.attributes?.episodeLength} minutes</span>\r\n                            </div>\r\n                            <p>{movie?.attributes?.description}</p>\r\n                          </div>\r\n                      </div> */}\r\n                    </div>\r\n\r\n                    <div className=\"main-wrapper\">\r\n                        \r\n                    <section id=\"main\">\r\n                        {/* <nav classname=\"navbar\">\r\n                            <div classname=\"container\">\r\n                                <div classname=\"row\">\r\n                                    <div className=\"navbar-nav\">\r\n                                        <a className=\"navlink-item\">Summary</a>\r\n                                        <a className=\"navlink-item\">Saga</a>\r\n                                        <a className=\"navlink-item\">Episodes</a>\r\n                                        <a className=\"navlink-item\">Characters</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </nav> */}\r\n                        <div className=\"left-sidebar sidebar\">\r\n                            <div className=\"poster-wrap\">\r\n                                <img src={movie?.attributes?.posterImage?.small} alt=\"\"/>\r\n                            </div>\r\n                            {/* <div className=\"streaming-links-wrap\">\r\n                                <div>Streaming links</div>\r\n                            </div> */}\r\n                        </div>\r\n                \r\n                        <section className=\"central sidebar\">\r\n                            <div className=\"description-wrap\">\r\n\r\n                            <div className=\"title-wrap\">\r\n                                <h3 className=\"title\">{movie?.attributes?.canonicalTitle}</h3>\r\n                                <h5 className=\"year\">{movie?.attributes?.startDate.split('-')[0]}</h5>\r\n\r\n                            </div>\r\n                                <h1 className=\"rating\" style={{color: rateColor}}>Approved By {movie?.attributes?.averageRating}% of the community</h1>\r\n                                <p id=\"description\" name=\"description\" className=\"reduced\">{movie?.attributes?.description}</p>\r\n                                <a id=\"expand-desc\" className=\"read-more\" onClick={handleExpand}>Read more...</a>\r\n                                <div className=\"rating-wrap\">\r\n                                    <div>\r\n                                        <Link to=\"/explore/anime/most-popular\">\r\n                                        <Star style={{ color: yellow[800], \"margin-bottom\":-2, \"margin-right\":5}}></Star>Ranked #{movie?.attributes?.popularityRank} (Most popular Anime)\r\n                                        </Link>\r\n                                    </div>\r\n                                    <div>\r\n                                        <Link to={\"/explore/anime/highest-rated\"}>\r\n                                        <Favorite style={{ color: red[800], \"margin-bottom\":-2, \"margin-right\":5 }}></Favorite>Rated #{movie?.attributes?.ratingRank} (Best Rated Anime)\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"genres\">\r\n                                {genres.map((genre,index)=> <li key={genre} style={{\"background\":rainbow(index)}}>\r\n                                <Link to={{\r\n                                    pathname:`/anime/categories/${genre.slug}`,\r\n                                     state:{\r\n                                         title:genre.title },\r\n                                     }}>{genre.title}</Link></li>)}                                    \r\n                                </div>\r\n\r\n                            </div>          \r\n        \r\n                        </section>\r\n            \r\n                        <section className=\"right-sidebar sidebar\">\r\n                            <div className=\"trailer\">\r\n                            {lightboxOpen && <ReactImageVideoLightbox id=\"player\"\r\n                            data={[\r\n                             { url: `https://www.youtube.com/embed/${movie?.attributes?.youtubeVideoId}?rel=0&amp;start=1;fs=0;autohide=1;hd=1;mute=0;autoplay=1;showinfo=0`, type: 'video', altTag: 'Trailer' }]}\r\n                                startIndex={0}\r\n                                showResourceCount={false}\r\n                                onCloseCallback={() => { setLightBox(false) }} />\r\n                             }\r\n                                <div className=\"trailer-preview\">\r\n                                    <img src={`https://img.youtube.com/vi/${movie?.attributes?.youtubeVideoId}/mqdefault.jpg`}  alt=\"\"/>\r\n                                    <button onClick={() => { setLightBox(true); window.scrollTo(0, 0) }}><PlayArrow/></button>\r\n                                </div>\r\n                             \r\n                            </div>\r\n                                <div className=\"details-wrap\">\r\n                                <h3>Anime Details</h3>\r\n                                <p><strong>English Title: </strong><span>{movie?.attributes?.titles.en}</span></p>\r\n                                <p><strong>Japanese (Romaji) Title: </strong>{movie?.attributes?.titles.en_jp}</p>\r\n                                <p><strong>American Title: </strong>{movie?.attributes?.titles.en_us}</p>\r\n                                <p><strong>Japanese: </strong>{movie?.attributes?.titles.ja_jp}</p>\r\n                                <p className=\"showtype\"><strong>Type: </strong>{movie?.attributes?.subtype}</p>\r\n                                <p className=\"episodes\"><strong>Episodes: </strong>{movie?.attributes?.episodeCount}</p>\r\n                                <div className=\"broadcast__start\"><strong>First Broadcast: </strong>{movie?.attributes?.startDate.split('-')[0]}</div>    \r\n                                <p className=\"status\"><strong>Status: </strong>{movie?.attributes?.status}</p>\r\n                                <p className=\"age rating\"><strong>Age Rating: </strong>{movie?.attributes?.ageRatingGuide}</p>\r\n                                <p className=\"episode-length\"><strong>Episode Length: </strong> {movie?.attributes?.episodeLength} minutes</p>\r\n                                </div>\r\n\r\n                                {!isLoading && characters !== undefined ? \r\n                                  <div className=\"characters-wrap\">\r\n                                    <h5>Characters</h5>\r\n                                    <div className=\"characters__pic-wrap\">\r\n                                    {characters&&characters.map(character => \r\n                                    <div className=\"character-pic\" key={character.attributes.name}>\r\n                                        <BootstrapTooltip TransitionComponent={Zoom} placement=\"top-start\" title={character.attributes.name} arrow>\r\n                                        <img src={character.attributes.image?.original||missing} alt={character.attributes.name}/>\r\n                                        </BootstrapTooltip>\r\n                                    </div>)}\r\n                                    </div>\r\n                                    <Link to={{\r\n                                    pathname:`/anime/${match.params.slug}/characters`,\r\n                                     state:{\r\n                                         id:movieId,\r\n                                         title:movie?.attributes?.titles.en||movie?.attributes?.titles.en_jp\r\n                                        },\r\n                                     }} className=\"view-more\" >View all characters</Link>\r\n                                </div> : ''}\r\n\r\n                                {!isLoading && saga !== undefined ?\r\n                                    <div className=\"saga-wrap\">\r\n                                <h5>Saga</h5>\r\n                                <div className=\"saga-pic-wrap\">\r\n                                    {saga&&saga.map(s => \r\n                                    <div className=\"saga-pic\" key={s.attributes.canonicalTitle}>\r\n                                        <BootstrapTooltip style={{\"fontSize\":46}} TransitionComponent={Zoom} placement=\"top-start\" title={s.attributes.canonicalTitle} arrow>\r\n                                        <img src={s.attributes.posterImage.small} alt={s.attributes.canonicalTitle}/>\r\n                                        </BootstrapTooltip>\r\n                                    </div>)}\r\n                                    </div>\r\n                                    <Link to={{\r\n                                    pathname:`/anime/${match.params.slug}/saga`,\r\n                                     state:{\r\n                                         id:movieId,\r\n                                         title:movie?.attributes?.titles.en||movie?.attributes?.titles.en_jp\r\n                                        },\r\n                                     }} className=\"view-more\" >View The entire saga</Link>\r\n                                </div> : ''}\r\n\r\n                                <div className=\"episode-wrap\">\r\n                                <Link to={{\r\n                                    pathname:`/anime/${match.params.slug}/episode`,\r\n                                     state:{\r\n                                         id:movieId,\r\n                                         title:movie?.attributes?.titles.en||movie?.attributes?.titles.en_jp\r\n                                        },\r\n                                     }} className=\"view-more\" >View all episodes</Link>\r\n                                 <MovieSharp style={{ color: red[800], \"margin-left\":15}}/>\r\n                                \r\n                                </div>\r\n                        </section> \r\n\r\n                    </section>\r\n                    </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AnimeDetails\r\n","\r\nimport React, { useState, useEffect } from 'react'\r\nimport axios from './axios';\r\nimport './Row.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Row({title, fetchUrl, slug}) {\r\n    const [movies, setMovies]  = useState([]);\r\n    const [isLoading, setisLoading]  = useState(true);\r\n\r\n    useEffect(() => {\r\n        async function fetchMovieData() {\r\n            const request = await axios.get(fetchUrl);\r\n            setMovies(request.data.data);\r\n            setisLoading(false)\r\n            return request;\r\n        }\r\n        fetchMovieData();\r\n    },[])\r\n    \r\n    return (\r\n        <div className=\"row__container\">        \r\n            <div className=\"row\">\r\n                <h3 className=\"row__title\">{title}</h3>\r\n\r\n                <div className=\"row__posters\">\r\n\r\n                    {isLoading ? (<h6>Loading...</h6>) : movies.map(movie=>(\r\n                    <>\r\n                        <Link to={`/anime/${movie.attributes.slug}`} key={movie.id}>\r\n                            <img src={movie.attributes.posterImage.small}  alt={movie.attributes.canonicalTitle}/>\r\n                        </Link>\r\n                    </>\r\n                )\r\n                )} \r\n                </div>\r\n                <div className=\"more\">\r\n                    {/* <a href=\"#\">View More</a> */}\r\n                    <Link to={{\r\n                        pathname: `/explore/anime/${slug}`}\r\n                        }>View More</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { Language } from \"@material-ui/icons\";\r\n\r\nconst requests = {\r\n\r\n    fetchMostPopular :\"https://kitsu.io/api/edge/anime?page[limit]=5&sort=-user_count\",\r\n    fetchHighestRated:\"https://kitsu.io/api/edge/anime?page[limit]=5&sort=-average_rating\",\r\n    fetchTrendingThisWeek: \"https://kitsu.io/api/edge/trending/anime?limit=5\",\r\n    fetchTopCurrent:\"https://kitsu.io/api/edge/anime?filter[status]=current&page[limit]=5&sort=-user_count\",\r\n    fetchTopUpcoming: \"https://kitsu.io/api/edge/anime?filter[status]=upcoming&page[limit]=5&sort=-user_count\",\r\n//?To Be Checked\r\n    fetchGenreInfos: `https://kitsu.io/api/edge/categories?filter[slug]=ecchi&include=parent.parent`,\r\n    fetchGenreNewlyReleased: `https://kitsu.io/api/edge/anime?filter[status]=current&filter[categories]=ecchi&page[limit]=15&sort=-start_date`,\r\n    fetchGenreMostPopular: `https://kitsu.io/api/edge/anime?filter[categories]=ecchi&page[limit]=15&sort=-user_count`,\r\n    fetchGenreTrending: `https://kitsu.io/api/edge/anime?filter[categories]=ecchi&page[limit]=15&sort=-user_count`,\r\n//? Language ti be used as filters when fetching anime characters\r\n//? Detailed info /Tab\r\n// fetchLang: `https://kitsu.io/api/edge/anime/${movie.id}/_languages`,\r\n// fetchChar: `https://kitsu.io/api/edge/castings?filter[media_type]=Anime&filter[media_id]=${movie.id}&filter[is_character]=true&filter[language]=${Language}&include=character,person&sort=-featured`,\r\n// fetchSaga: `https://kitsu.io/api/edge/media-relationships?filter[source_id]=${movie.id}&filter[source_type]=Anime&include=destination&sort=role`,\r\n// //? Limited \r\n// fetchSagaltd: `https://kitsu.io/api/edge/media-relationships?filter[source_id]=${movie.id}&filter[source_type]=Anime&include=destination&page[limit]=4&sort=role`\r\n       \r\n}\r\n\r\nexport default requests;","import React from 'react'\r\nimport Row from './Row'\r\nimport requests from './requests';\r\n\r\n\r\nfunction Home() {\r\n  return (\r\n    <>\r\n        <Row title=\"Most Popular\" fetchUrl={requests.fetchMostPopular} slug=\"most-popular\"/>\r\n        <Row title=\"Highest Rated\" fetchUrl={requests.fetchHighestRated} slug=\"highest-rated\"/>\r\n        <Row title=\"Trending\" fetchUrl={requests.fetchTrendingThisWeek} slug=\"trending\"/>\r\n        <Row title=\"Top Current\" fetchUrl={requests.fetchTopCurrent} slug=\"top-current\"/>\r\n        <Row title=\"Top Upcoming\" fetchUrl={requests.fetchTopUpcoming} slug=\"top-upcoming\"/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { Star,Favorite } from '@material-ui/icons';\r\nimport { yellow,red } from '@material-ui/core/colors';\r\nimport missing from './img/missing.jpg';\r\nimport {Link} from 'react-router-dom'\r\nimport './AnimeItem.css'\r\n\r\n\r\n\r\n\r\nconst AnimeItem = ({ item }) => {\r\n  const rateColor = item.attributes.averageRating && item.attributes.averageRating <30 ? 'red' :\r\n  (item.attributes.averageRating && item.attributes.averageRating >=30 && item.attributes.averageRating && item.attributes.averageRating < 80 ) ? 'orange' : '#1abc9c'; \r\n\r\n  return (\r\n  <div className=\"Grid-item\" key={item.id}>\r\n    <div className=\"Card\">\r\n    <div className=\"Front\">\r\n      {<img className=\"Poster\" src={item.attributes.posterImage == null ? missing : item.attributes.posterImage.medium } alt={item.attributes.canonicalTitle}></img>}\r\n      <h2 className=\"Title\">{item.attributes.canonicalTitle}\r\n      </h2>\r\n      <div className=\"Rates\">\r\n        \r\n      </div>\r\n  </div>\r\n\r\n    <div className=\"Back\">\r\n      <h3 >{item.attributes.canonicalTitle}</h3>\r\n      {/* <h3 className=\"description\">{item.attributes.description}</h3> */}\r\n      {/* <meter min=\"0\" low=\"10\" optimum=\"50\" high=\"90\" max=\"100\" value={item.attributes.averageRating}></meter> */}\r\n      <p className=\"avg\" style={{color: rateColor}}>{(item.attributes.averageRating) ? item.attributes.averageRating+'%' : 'N/A'}</p>\r\n      <p className=\"pop\"><Star style={{ color: yellow[800] }}></Star>#{item.attributes.popularityRank} Most popular</p>\r\n      <p className=\"pop\"><Favorite style={{ color: red[800] }}></Favorite>#{item.attributes.ratingRank} Best Rated</p>\r\n      <p><strong>Type: </strong>{item.attributes.showType}</p>\r\n      <p><strong>Broadcast on: </strong>{(item.attributes.startDate) ? (item.attributes.startDate.split('-')[0]) : 'N/A'}</p>\r\n      <p><strong>English: </strong>{item.attributes.titles.en}</p>\r\n      <p><strong>Japanese: </strong>{item.attributes.titles.ja_jp}</p>\r\n      {/* <p><strong>Japanese (Romaji): </strong>{item.attributes.titles.en_jp}</p> */}\r\n      <p><strong>Status: </strong>{item.attributes.status}</p>\r\n      <p><strong>Episode Length: </strong>{item.attributes.episodeLength} minutes</p>\r\n      <p><strong>Age Rating: </strong>{item.attributes.ageRatingGuide}</p>\r\n      {/* <a className='title-link' href= {'https://kitsu.io/anime/'+item.attributes.slug} target=\"_blank\" rel=\"noopener noreferrer\">More Details</a> */}\r\n      <Link to={`/anime/${item.attributes.slug}`} className='title-link'>More Details</Link>\r\n    </div>\r\n  </div>\r\n  </div>\r\n  )}\r\n\r\nexport default AnimeItem\r\n","import React from 'react'\r\nimport spinner from './img/spinner3.gif'\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className='Spinner'>\r\n      <img\r\n      src={spinner}\r\n      style={{ width: '200px', margin: 'auto', display: 'block'}}\r\n      alt='Loading'\r\n    />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spinner","import React from 'react'\r\nimport {useHistory} from 'react-router'\r\nimport { KeyboardReturn,ArrowBack } from '@material-ui/icons';\r\nimport './Back.css'\r\n\r\nfunction Back() {\r\n    const history = useHistory()\r\n    const goBack = () => {\r\n        history.goBack()\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"BackBtn\" onClick={goBack}><ArrowBack/>Back</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Back\r\n","      \r\nimport React from 'react'\r\nimport AnimeItem from './AnimeItem';\r\nimport Spinner from './Spinner'\r\nimport './AnimeGrid.css'\r\nimport Back from './Back'\r\n\r\nconst AnimeGrid = ({items, isLoading, title, description}) => {\r\n  return (<div className=\"Grid-cnt\"><div class=\"ribbon-wrapper\">\r\n  <h3 class=\"ribbon\">\r\n    <strong class=\"ribbon-inner\">{title}</strong>\r\n  </h3>\r\n<p className=\"definition\">{description}</p>\r\n</div><Back/><div className='Grid'>\r\n\r\n    {isLoading ? (<div className=\"spinner-wrap\"><Spinner/><h3>Loading ...</h3></div>) :\r\n   (items.map( (item)=>  (<AnimeItem key={item.id} item={item}></AnimeItem>)) )}\r\n          </div></div>)\r\n}\r\n//   return (\r\n//     <section className= \"Grid\">\r\n//         {items.map(({item}) => (\r\n//       <div key={item.id} >\r\n//           <h1 className=\"Title\">{item.attributes.canonicalTitle}</h1>\r\n//           <h3 className=\"description\">{item.attributes.description}</h3>\r\n//           <p className=\"synopsis\">{item.attributes.synopsis}</p>\r\n//       </div>\r\n//     ))}\r\n//   </section>\r\n  \r\n// )\r\nexport default AnimeGrid;","import React, {useState} from 'react'\r\nimport { FirstPageTwoTone,SkipNextTwoTone,SkipPreviousTwoTone,LastPageTwoTone } from '@material-ui/icons';\r\nimport './Pagination.css'\r\nimport axios from '../components/axios'\r\n\r\nconst Pagination = ({prev, next, last, first,handlePage,itemsNb}) => {\r\n// const Pagination = ({pages, getPageLimit, paginate,currentPage}) => {\r\n//     let pageNumbers = [];\r\n\r\n    \r\n// for (let i=1; i<= Math.ceil(pages/getPageLimit); i++){\r\n//      pageNumbers.push(i);\r\n//     }\r\n\r\nconst [isLoading, setIsLoading] = useState(false)\r\nconst [items, setItems] = useState([])\r\n\r\n\r\nasync function fetchMovieData(url) {\r\n    handlePage(url);\r\n    return (items)\r\n}\r\n    return (\r\n        //Math.ceil(itemsNb/PageLimit) = pagesnumber\r\n        Math.ceil(itemsNb/10) > 1 ?\r\n        <div className=\"pagination\">\r\n            {prev ?  <button type=\"button\" onClick={()=>{fetchMovieData(first)}}><FirstPageTwoTone>First</FirstPageTwoTone></button> : <button type=\"button\" disabled><FirstPageTwoTone>First</FirstPageTwoTone></button>}\r\n            {prev ?  <button type=\"button\" onClick={()=>{fetchMovieData(prev)}}><SkipPreviousTwoTone>Previous</SkipPreviousTwoTone></button> : <button type=\"button\" disabled><SkipPreviousTwoTone>Previous</SkipPreviousTwoTone></button>}\r\n            {next ?  <button type=\"button\" onClick={()=>{fetchMovieData(next)}}><SkipNextTwoTone>Next</SkipNextTwoTone></button> : <button type=\"button\" disabled><SkipNextTwoTone>Next</SkipNextTwoTone></button>}\r\n            {next ?  <button type=\"button\" onClick={()=>{fetchMovieData(last)}}><LastPageTwoTone>Last</LastPageTwoTone></button> : <button type=\"button\" disabled><LastPageTwoTone>Last</LastPageTwoTone></button>}\r\n        </div>\r\n        : ''\r\n\r\n//         <section className=\"Footer\">\r\n//             <nav>\r\n//                 <ul className='pagination'>\r\n//                     {pageNumbers.map(number => (\r\n//                     <li key={number} className='page-item'>\r\n//                         <a href=\"!#\" onClick={() => {paginate((number-1)*getPageLimit,number)}}\r\n//                          className ={currentPage === number ? 'active' : ''}>\r\n//                         {number}\r\n//                         </a>\r\n//                     </li>\r\n//   ))}\r\n// </ul>\r\n//                     </nav>\r\n//         </section>        \r\n    )\r\n}\r\n\r\nexport default Pagination","import React, {useState, useEffect} from 'react';\r\nimport  {useLocation} from 'react-router'\r\nimport AnimeGrid from './AnimeGrid'\r\nimport axios from './axios'\r\nimport Pagination from '../components/Pagination'\r\n\r\n\r\nfunction Search() {\r\n    const location = useLocation()\r\n    const [items,setItems] = useState([])\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [PageOffset, setPageOffset] = useState(0);\r\n\r\n    const [next, setNext] = useState('')\r\n    const [prev, setPrev] = useState('')\r\n    const [last, setLast] = useState('')\r\n    const [first, setFirst] = useState('')\r\n    const [itemsNb, setItemsNb]  = useState('');\r\n\r\n\r\n\r\n    const SEARCH_API = `https://kitsu.io/api/edge/anime?fields[anime]=slug,canonicalTitle,titles,posterImage,description,averageRating,startDate,popularityRank,ratingRank,ageRatingGuide,showType,status&filter[text]=${location.search}&page[offset]=${PageOffset}&page[limit]=10`\r\n\r\n    \r\n    async function fetchMovieData(url) {\r\n        setIsLoading(true);\r\n        const resp = await axios.get(url);\r\n        setIsLoading(false);\r\n        setItems(resp.data.data);\r\n        setFirst(resp.data.links.first)\r\n        setLast(resp.data.links.last)\r\n        setNext(resp.data.links.next)\r\n        setPrev(resp.data.links.prev)\r\n        setItemsNb(resp.data.meta.count)\r\n        \r\n        return (items);\r\n      }\r\n\r\n    useEffect(() => {\r\n      fetchMovieData(SEARCH_API)}\r\n  ,[location.search])\r\n  \r\n  // const Paginate = (p) => {\r\n  //   setIsLoading(true)\r\n  //   setItems([...p.data])\r\n  //   setFirst(p.links.first)\r\n  //   setLast(p.links.last)\r\n  //   setNext(p.links.next)\r\n  //   setPrev(p.links.prev)\r\n  //   setIsLoading(false)\r\n  // }\r\n  \r\n    return (\r\n    <div><>\r\n                <AnimeGrid items={items} isLoading={isLoading} title={'Search results for: '+location.state.term}/>\r\n                <Pagination next={next} prev={prev} last={last} first={first}\r\n                 items={items} handlePage={(p)=>{fetchMovieData(p)}} itemsNb={itemsNb} />\r\n                </>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\nimport './About.css'\r\n\r\nfunction About() {\r\n    return (\r\n        <div className=\"About-wrapper\">\r\n            <h1>Application Information</h1>\r\n            <p>\r\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer porta, massa et elementum pellentesque, leo odio congue libero, in vehicula elit nibh nec erat. Ut mattis vel quam eu molestie. Aenean interdum aliquet tempor. Nunc ante nisl, commodo id consequat a, tincidunt nec diam. Suspendisse leo justo, bibendum id magna ac, commodo imperdiet lectus. Suspendisse diam tortor, varius in mauris in, tempor tempor mauris. Proin porta condimentum suscipit. Cras auctor orci ipsum, et mollis mi gravida et. Sed vel erat nisl. Nulla sem mi, laoreet non vehicula ac, egestas id nisi.\r\n\r\nSed commodo dolor in urna venenatis ultricies. Vestibulum sed lectus quam. Morbi tristique orci accumsan quam lacinia, non pulvinar urna scelerisque. Praesent pellentesque elit enim, et condimentum ligula tincidunt ut. Maecenas dictum facilisis sagittis. Vivamus lacus lectus, rutrum ac commodo eget, blandit et arcu. Mauris laoreet lacinia felis eu porta. Quisque quis semper dolor, vitae luctus odio. Mauris rhoncus hendrerit sapien, id faucibus ex iaculis non. Donec placerat quam vitae purus pulvinar faucibus bibendum sit amet mi. Fusce ligula quam, feugiat id nibh vitae, pharetra luctus tellus. Fusce mattis lorem at sapien rhoncus ultricies. Donec ultrices velit augue, et accumsan tellus scelerisque sed. Mauris id luctus sapien, et vestibulum magna.\r\n\r\nIn posuere erat ut augue tempus semper in ut eros. Cras diam lectus, efficitur tincidunt eleifend nec, euismod quis mauris. Pellentesque enim enim, malesuada id commodo et, euismod ac arcu. Nullam porta orci quis rutrum porttitor. Donec ante nunc, rhoncus ac eros ullamcorper, feugiat imperdiet est. Fusce gravida venenatis ligula, eget pretium dolor aliquam et. Nullam nec tristique nisl. Sed eros odio, posuere id semper a, sodales et est.\r\n\r\nVestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Donec pellentesque pharetra ex, quis elementum tortor aliquam porttitor. Maecenas et congue nulla. Integer ullamcorper ex lorem, id mollis tortor tincidunt eget. Pellentesque ut viverra nibh. Ut non ultrices nisi, id lobortis quam. Praesent urna orci, scelerisque a leo non, egestas pellentesque dui. Maecenas euismod diam et diam blandit, sed dapibus enim auctor. In sapien tellus, posuere vel pulvinar eget, dignissim et elit. Quisque fringilla scelerisque accumsan.\r\n\r\nPellentesque sit amet lobortis arcu. Curabitur imperdiet sit amet neque at mollis. Praesent vel ullamcorper leo, vel mollis libero. Praesent eleifend finibus leo, ut facilisis odio ultrices vitae. Quisque tincidunt sit amet ante ut ultrices. Praesent et elit viverra, tristique nunc non, laoreet risus. Vivamus porta ligula sit amet pulvinar placerat. Curabitur convallis pellentesque libero, luctus consequat nisi mollis non. Donec ut lacus quis purus gravida facilisis sed et enim.\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\nimport {useState, useEffect} from 'react'\r\nimport AnimeGrid from '../components/AnimeGrid'\r\nimport axios from '../components/axios'\r\nimport Pagination from '../components/Pagination'\r\n\r\n\r\nfunction Highestrated() {\r\n    const fetchUrl= \"https://kitsu.io/api/edge/anime?page%5Blimit%5D=20&page%5Boffset%5D=0&sort=-averageRating\";\r\n        \r\n    const [movies, setMovies]  = useState([]);\r\n    const [isLoading, setisLoading]  = useState(true);\r\n    \r\n    const [next, setNext]  = useState('');\r\n    const [last, setLast]  = useState('');\r\n    const [first, setFirst]  = useState('');\r\n    const [prev, setPrev]  = useState('');\r\n    const [itemsNb, setItemsNb]  = useState('');\r\n\r\n\r\n    async function fetchMovieData(url) {\r\n        setisLoading(true)\r\n        const request = await axios.get(url);\r\n        setMovies(request.data.data);\r\n        setFirst(request.data.links.first)\r\n        setLast(request.data.links.last)\r\n        setNext(request.data.links.next)\r\n        setPrev(request.data.links.prev)    \r\n        setItemsNb(request.data.meta.count)    \r\n        setisLoading(false)\r\n        return request;\r\n    }\r\n\r\n    useEffect(() => {        \r\n        fetchMovieData(fetchUrl);\r\n    },[])\r\n\r\n    return (<>\r\n                <AnimeGrid items={movies} isLoading={isLoading} title='Highest Rated Animes'/>\r\n                <Pagination next={next} prev={prev} last={last} first={first} items={movies} handlePage={(p)=>{fetchMovieData(p)}} itemsNb={itemsNb}/>\r\n            </>\r\n    \r\n    )\r\n}\r\n\r\nexport default Highestrated\r\n\r\n","\r\n    \r\nimport React from 'react'\r\nimport {useState, useEffect} from 'react'\r\nimport AnimeGrid from '../components/AnimeGrid'\r\nimport axios from '../components/axios'\r\nimport Pagination from '../components/Pagination'\r\n\r\n\r\nfunction Mostpopular() {\r\n    const fetchUrl=\"https://kitsu.io/api/edge/anime?page%5Blimit%5D=20&sort=-userCount\"\r\n    \r\n    const [movies, setMovies]  = useState([]);\r\n    const [isLoading, setisLoading]  = useState(true);\r\n\r\n    const [next, setNext]  = useState('');\r\n    const [last, setLast]  = useState('');\r\n    const [first, setFirst]  = useState('');\r\n    const [prev, setPrev]  = useState('');\r\n    const [itemsNb, setItemsNb]  = useState('');\r\n    \r\n   \r\n//     const fetchNext = () => {\r\n//     fetchMovieData(next);\r\n//  }\r\n//     const fetchLast = () => {\r\n//     fetchMovieData(last);\r\n//  }\r\n//     const fetchFirst = () => {\r\n//     fetchMovieData(first);\r\n//   }\r\n//     const fetchPrev = () => {\r\n//     fetchMovieData(prev);\r\n//  }\r\n\r\n    async function fetchMovieData(url) {\r\n        setisLoading(true)\r\n        const request = await axios.get(url);\r\n        setMovies(request.data.data);\r\n        setFirst(request.data.links.first)\r\n        setLast(request.data.links.last)\r\n        setNext(request.data.links.next)\r\n        setPrev(request.data.links.prev)\r\n        setItemsNb(request.data.meta.count)\r\n        setisLoading(false)\r\n        //append lazyloading\r\n        // setMovies((prev)=>[...prev,...request.data.data]);\r\n        // setNext(request.data.links.next);\r\n        // setLast(request.data.links.last);\r\n        // setFirst(request.data.links.first);\r\n        // setPrev(request.data.links.prev);\r\n    }\r\n    useEffect(() => {\r\n        fetchMovieData(fetchUrl);\r\n    },[])\r\n\r\n    return (\r\n                <>\r\n                <AnimeGrid items={movies} isLoading={isLoading} title='Most Popular Animes'/>\r\n                <Pagination next={next} prev={prev} last={last} first={first} items={movies} handlePage={(p)=>{fetchMovieData(p)}} itemsNb={itemsNb}/>\r\n                </>\r\n    )\r\n}\r\n\r\nexport default Mostpopular\r\n","import React from 'react'\r\nimport {useState, useEffect} from 'react'\r\nimport AnimeGrid from '../components/AnimeGrid'\r\nimport axios from '../components/axios'\r\n\r\n\r\nfunction Trending() {\r\n\r\n    const fetchUrl = 'https://kitsu.io/api/edge/trending/anime?limit=20'\r\n    \r\n    const [movies, setMovies]  = useState([]);\r\n    const [isLoading, setisLoading]  = useState(true);\r\n\r\n    useEffect(() => {\r\n        async function fetchMovieData() {\r\n            setisLoading(true)\r\n            const request = await axios.get(fetchUrl);\r\n            setMovies(request.data.data);\r\n            setisLoading(false)\r\n            return request;\r\n        }\r\n        fetchMovieData();\r\n    },[])\r\n    \r\n    return ( <AnimeGrid items={movies} isLoading={isLoading} title='Trending this week'/> )\r\n}\r\n\r\nexport default Trending\r\n\r\n","import React from 'react'\r\nimport {useState, useEffect} from 'react'\r\nimport AnimeGrid from '../components/AnimeGrid'\r\nimport axios from '../components/axios'\r\n\r\n\r\n\r\nfunction Topupcoming() {\r\n    const fetchUrl =  'https://kitsu.io/api/edge/anime?filter%5Bstatus%5D=upcoming&page%5Blimit%5D=20&sort=-userCount'\r\n        \r\n    const [movies, setMovies]  = useState([]);\r\n    const [isLoading, setisLoading]  = useState(true);\r\n\r\n    useEffect(() => {\r\n        async function fetchMovieData() {\r\n            setisLoading(true)\r\n            const request = await axios.get(fetchUrl);\r\n            setMovies(request.data.data);\r\n            setisLoading(false)\r\n            return request;\r\n        }\r\n        fetchMovieData();\r\n        console.log(movies)\r\n    },[])\r\n\r\n    return ( <AnimeGrid items={movies} isLoading={isLoading} title='Top Upcoming Animes'/> )\r\n}\r\n\r\nexport default Topupcoming\r\n\r\n","\r\nimport React from 'react'\r\nimport {useState, useEffect} from 'react'\r\nimport Pagination from '../components/Pagination'\r\nimport AnimeGrid from '../components/AnimeGrid'\r\nimport axios from '../components/axios'\r\n\r\n\r\nfunction Topcurrent() {\r\n    const [movies, setMovies]  = useState([]);\r\n    const [isLoading, setisLoading]  = useState(true);\r\n    const fetchUrl= `https://kitsu.io/api/edge/anime?filter%5Bstatus%5D=current&page%5Blimit%5D=20&page%5Boffset%5D=0&sort=-userCount\r\n\r\n`\r\n    const [next, setNext]  = useState('');\r\n    const [last, setLast]  = useState('');\r\n    const [first, setFirst]  = useState('');\r\n    const [prev, setPrev]  = useState('');\r\n\r\n    async function fetchMovieData(url) {\r\n        setisLoading(true)\r\n        const request = await axios.get(url);\r\n        setMovies(request.data.data);\r\n        setFirst(request.data.links.first)\r\n        setLast(request.data.links.last)\r\n        setNext(request.data.links.next)\r\n        setPrev(request.data.links.prev)   \r\n        setisLoading(false)\r\n        return request;\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchMovieData(fetchUrl);\r\n    },[])\r\n\r\n    return (\r\n        <>\r\n        <AnimeGrid items={movies} isLoading={isLoading} title='Top Current Animes'/>\r\n        <Pagination next={next} prev={prev} last={last} first={first} items={movies} handlePage={(p)=>{fetchMovieData(p)}}/>\r\n        </>\r\n    )\r\n}\r\nexport default Topcurrent","import React from 'react';\r\nimport {useState, useEffect} from 'react';\r\nimport {useParams,useLocation} from 'react-router';\r\nimport axios from '../components/axios';\r\nimport AnimeGrid from '../components/AnimeGrid'\r\nimport Pagination from '../components/Pagination'\r\nimport \"./Categories.css\"\r\n\r\nfunction Categories(props) {\r\n    const {category} = useParams();\r\n    const [movies,setMovies] = useState([])\r\n    const [isLoading, setisLoading] = useState(false)\r\n    const [description, setDescription] = useState(null)\r\n\r\n    const [next, setNext]  = useState('');\r\n    const [last, setLast]  = useState('');\r\n    const [first, setFirst]  = useState('');\r\n    const [prev, setPrev]  = useState('');\r\n    const [itemsNb, setItemsNb]  = useState('');\r\n    \r\n    const location = useLocation()\r\n\r\n    const fetchCategoryUrl= `https://kitsu.io/api/edge/anime?fields[anime]=slug,canonicalTitle,titles,posterImage,description,averageRating,startDate,popularityRank,ratingRank,youtubeVideoId&filter[categories]=${category}&page[limit]=20&page[offset]=0&sort=-user_count`\r\n    const fetchCategorydescUrl = `https://kitsu.io/api/edge/categories?filter[slug]=${category}&include=parent.parent`\r\n    const catTitle = location.state&&location.state.title\r\n    // const newly_released = `https://kitsu.io/api/edge/anime?filter[status]=current&filter[categories]=${category}&page[limit]=15&sort=-start_date`\r\n    // const most_popular = `https://kitsu.io/api/edge/anime?filter%5Bcategories%5D=${category}&page%5Blimit%5D=15&sort=-user_count`\r\n    // const trending = `https://kitsu.io/api/edge/trending/anime?limit=15&in_category=true&category=180`\r\n     \r\n    // useEffect(() => {\r\n    //     async function fetchMovieData() {\r\n    //         setisLoading(true);\r\n    //         const resp = await axios.get(fechCategorydescUrl);\r\n    //         console.log(resp.data)\r\n    //         setisLoading(false);\r\n    //         setDescription(resp?.data?.data?.attributes?.description);\r\n    //         return description;\r\n            \r\n    //     }\r\n    //     fetchMovieData();\r\n    // },[])\r\n    async function fetchMovieData(url) {\r\n        setisLoading(true);\r\n        const respCatMov = await axios.get(url);\r\n        const respCatDesc= await axios.get(fetchCategorydescUrl);\r\n        // console.log('Movies',respCatMov.data.data)\r\n        setisLoading(false);\r\n        setMovies(respCatMov.data.data);\r\n        setDescription(respCatDesc?.data?.data[0]);\r\n        setFirst(respCatMov.data.links.first)\r\n        setLast(respCatMov.data.links.last)\r\n        setNext(respCatMov.data.links.next)\r\n        setPrev(respCatMov.data.links.prev)\r\n        setItemsNb(respCatMov.data.meta.count)\r\n\r\n        return (movies,description);\r\n    }\r\n\r\n    useEffect(() => {        \r\n        fetchMovieData(fetchCategoryUrl)\r\n        },[])\r\n\r\n    return (\r\n        <div id=\"categories__wrapper\">\r\n            <AnimeGrid items={movies}\r\n             isLoading={isLoading}\r\n             title={catTitle}\r\n             description={description?.attributes?.description}/>\r\n            <Pagination next={next}\r\n             prev={prev} last={last}\r\n             first={first} items={movies}\r\n             handlePage={(p)=>{fetchMovieData(p)}} itemsNb={itemsNb} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Categories\r\n","import React from 'react';\r\nimport {useState, useEffect} from 'react';\r\nimport {useLocation } from 'react-router-dom'\r\nimport axios from '../components/axios';\r\nimport './characters.css'\r\nimport Back from '../components/Back'\r\nimport missing from '../components/img/missing.jpg'\r\n\r\n\r\nfunction Characters(props) {\r\n\r\nconst location = useLocation()\r\nconst movieid = location.state&&location.state.id\r\nconst movieTitle = location.state&&location.state.title\r\nconst [isLoading, setisLoading]  = useState(true);\r\nconst [languages, setLanguages]  = useState([]);\r\nconst [selectedlanguage, setSelectedLanguage]  = useState('');\r\nconst [casting, setCasting]  = useState([]);\r\nconst [hasMore, setHasMore]  = useState('');\r\n\r\nconst fetchLangsUrl = `https://kitsu.io/api/edge/anime/${movieid}/_languages`\r\nconst fetchCharsUrl = `https://kitsu.io/api/edge/castings?filter[media_type]=Anime&filter[media_Id]=${movieid}&filter[is_character]=true&filter[language]=${selectedlanguage}&include=character,person&sort=-featured`\r\n\r\n// const voiceactor = `https://kitsu.io/api/edge/castings?filter[is_character]=true&filter[language]=Japanese&filter[media_id]=${movieid}&filter[media_type]=Anime&include=character,person&page[limit]=10&page[offset]=0&sort=-featured`\r\nconst infos = {}\r\n\r\n//* fetch (data.data.relationships.character.data.id) => char_id\r\n//* fetch data.data.relationships.person.data.id => person_id\r\n//* if (data.included.id) == char_id => fetch included.attributs.name => save to\r\n/*\r\n? Remove ducpicates from fetched characters\r\n */\r\nconst loadMore = (p) => {\r\n    let arr = p.concat(infos.data)\r\n    let arr2 = [...new Map(arr.map(item => [JSON.stringify(item), item])).values()];\r\n    return (arr2)\r\n}\r\n\r\nuseEffect(() => {\r\n    async function fetchLangData() {\r\n        const reqLangs = await axios.get(fetchLangsUrl);\r\n        setLanguages(reqLangs.data);\r\n        setSelectedLanguage('Japanese')\r\n        setisLoading(false)\r\n        return (languages);\r\n    }\r\n    fetchLangData();\r\n},[])\r\n\r\n\r\nasync function fetchMovieData(url) {\r\n    const resp = await axios.get(url);\r\n    setisLoading(false)\r\n\r\n    Object.assign(infos,resp.data);\r\n\r\n        for (let i = 0; i < infos.data.length; i++) {\r\n            let person_id = infos.data[i].relationships.person.data.id;\r\n            let char_id = infos.data[i].relationships.character.data.id;\r\n\r\n                for (let j = 0; j < infos.included.length; j++) {\r\n\r\n                    let id = infos.included[j].id;\r\n                    let name = infos.included[j].attributes.name;\r\n                        if (char_id === id)\r\n                            {\r\n                                infos.data[i].relationships.character.data['name'] = name;\r\n                                infos.data[i].relationships.character.data['image'] = infos.included[j].attributes?.image?.original;\r\n                            }\r\n\r\n                        if (person_id === id)\r\n                        {\r\n                            infos.data[i].relationships.person.data['name'] = name;\r\n                            infos.data[i].relationships.person.data['image'] = infos.included[j].attributes?.image?.original;\r\n                        }\r\n\r\n            }\r\n        }\r\n        setCasting((prev)=>loadMore(prev))  \r\n        setHasMore(infos.links.next)\r\n        return (infos);\r\n\r\n\r\n}\r\n\r\nuseEffect(() => {\r\nfetchMovieData(fetchCharsUrl);\r\nsetCasting([]) // clear previous other lang actors so they wont be appended to current lang actors\r\n},[selectedlanguage,languages])\r\n\r\n\r\n    return (\r\n            <><h3 class=\"ribbon\">\r\n                <strong class=\"ribbon-inner\">{movieTitle} Characters</strong>\r\n            </h3>\r\n        <div>\r\n            <Back/>\r\n            <label for=\"Languages\">Choose a language:</label>\r\n\r\n            <select id=\"Languages\" onChange={(e)=> {setSelectedLanguage(e.target.options[e.target.selectedIndex].text)}}>\r\n            {languages&&languages.map(lang => \r\n            <option key={lang} value={lang} selected = {lang === selectedlanguage ? 'true' : 'false'}>{lang}</option>)}\r\n            </select>\r\n            \r\n            <div className=\"media-wrap\">\r\n\r\n            {isLoading ? <h3>'Loading ...'</h3> :  casting&&casting.map(char =>\r\n            <>\r\n              <div className=\"Characters-wrap\">\r\n                  \r\n                <div className=\"Character-pic\">\r\n                    <img key={char?.relationships.character.data.image} src={char?.relationships.character.data.image||missing} atl={char?.relationships.character.data.image}/>\r\n                </div>\r\n                \r\n                <div className=\"Character-name\">\r\n                    <p key={char?.relationships.character.data.name}>{char?.relationships.character.data.name}</p>\r\n                </div>\r\n\r\n                <div className=\"actors-wrap\">\r\n                \r\n                    <div className=\"Actors-pic\">\r\n                        <img key={char?.relationships?.person.data.image} src={char?.relationships.person.data.image} atl={char?.relationships.person.data.name}/>\r\n                    </div>\r\n\r\n                    <div className=\"Actor-name\">\r\n                        <p key={char.relationships?.person.data.name}>{char.relationships.person.data.name}</p>\r\n                    </div>\r\n                \r\n            </div>\r\n                \r\n            </div>\r\n            </>            \r\n            )\r\n            }\r\n             \r\n            </div>\r\n                {hasMore ? <button onClick={()=> {if (hasMore) {fetchMovieData(hasMore)}}}>Load More ...</button> : ''}\r\n        </div></>\r\n    )\r\n    }\r\nexport default Characters","import React,{useState, useEffect} from 'react'\r\nimport {useLocation } from 'react-router-dom'\r\nimport axios from '../components/axios';\r\nimport Back from '../components/Back'\r\nimport './Saga.css'\r\nimport Spinner from '../components/Spinner'\r\n\r\nfunction Saga(props) {\r\n    const location = useLocation()\r\n    const movieTitle = location.state&&location.state.title\r\n    const movieid = location.state&&location.state.id\r\n    const fetchUrl = `https://kitsu.io/api/edge/media-relationships?filter[source_id]=${movieid}&filter[source_type]=Anime&include=destination&page[limit]=10&page[offset]=0&sort=role`\r\n    const [saga,setSaga] = useState([])\r\n    const [isLoading, setisLoading]  = useState(true);\r\n    \r\n    useEffect(() => {\r\n        async function fetchMovieData() {\r\n            const request = await axios.get(fetchUrl);\r\n            setSaga(request.data.included);\r\n\r\n            const infos = {}\r\n            Object.assign(infos,request.data);\r\n\r\n            for (let index = 0; index < infos.data.length; index++) {\r\n                let stringified= JSON.stringify(infos.data[index].attributes.role);\r\n                let role_lablel = stringified.split(\"_\").join(\" \").replace(/\"/g,\"\")\r\n                let role_id = infos.data[index].relationships.destination.data.id;\r\n                let attrib_id = infos.included[index].id;\r\n                if(role_id === attrib_id) {\r\n                    infos.included[index].attributes['role']=role_lablel\r\n                }\r\n            }\r\n            setisLoading(false)\r\n            return infos;\r\n        }\r\n        fetchMovieData();\r\n    },[])\r\n    return (\r\n        <div>\r\n        <Back/>\r\n        <h3 class=\"ribbon\">\r\n            <strong class=\"ribbon-inner\">{movieTitle} Franchise</strong>\r\n        </h3>\r\n            <div>\r\n                <div className=\"saga-grid\">\r\n                        {!isLoading ? saga&&saga.map(s => <div className=\"saga-item\">\r\n                            \r\n                            <div className=\"saga-item-poster\">\r\n                                <img src={s?.attributes?.posterImage?.small} />\r\n                            </div>\r\n\r\n                            <div className=\"saga-item-title\">\r\n                                <h4 className=\"title\">{s?.attributes?.titles?.en || s?.attributes?.titles?.en_jp}</h4>\r\n                                <span className=\"media-type\">{s?.attributes?.showType}</span>\r\n                                <span className=\"media-date\"> . {s?.attributes?.startDate.split(\"-\")[0]}</span>\r\n                                <span className=\"info\">{s.attributes.role}</span>\r\n                            </div>\r\n                                </div>\r\n                                ) : \"Loading...\"}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Saga\r\n","import React from 'react';\r\nimport {useState, useEffect} from 'react';\r\nimport {useLocation } from 'react-router-dom'\r\nimport axios from '../components/axios';\r\nimport Back from '../components/Back'\r\nimport Pagination from '../components/Pagination'\r\nimport missing from '../components/img/missing.jpg';\r\nimport Spinner from '../components/Spinner'\r\nimport  './episodes.css'\r\n\r\nfunction Episodes(props){\r\n\r\n    const location = useLocation()\r\n    const movieid = location.state&&location.state.id\r\n    const movieTitle = location.state&&location.state.title\r\n    const fetchUrl = `https://kitsu.io/api/edge/episodes?filter[mediaType]=Anime&filter[media_id]=${movieid}&sort=number`\r\n    const [items,setItems] = useState([])\r\n    const [isLoading, setisLoading] = useState(true)\r\n\r\n\r\n    const [next, setNext]  = useState('');\r\n    const [last, setLast]  = useState('');\r\n    const [first, setFirst]  = useState('');\r\n    const [prev, setPrev]  = useState('');\r\n    const [itemsNb, setItemsNb]  = useState('');\r\n\r\n    async function fetchMovieData(url) {\r\n        const result = await axios.get(url);\r\n        setItems(result.data);\r\n        setFirst(result.data.links.first)\r\n        setLast(result.data.links.last)\r\n        setNext(result.data.links.next)\r\n        setPrev(result.data.links.prev)\r\n        setItemsNb(result.data.meta.count)\r\n        setisLoading(false)\r\n\r\n        return (items);\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        fetchMovieData(fetchUrl);\r\n    },[])\r\n    \r\n    return (\r\n        <>\r\n        <h3 class=\"ribbon\">\r\n            <strong class=\"ribbon-inner\">{movieTitle} Episodes</strong>\r\n        </h3>\r\n        <div className=\"episodes-wrap\">\r\n        <Back/>\r\n        <div className=\"episodes-grid\">\r\n\r\n        {!isLoading ? \r\n            (items.data&&items.data.map(\r\n            item => <>\r\n            <div className=\"episode-item\">\r\n\r\n                <div className=\"thumb-wrap\">\r\n                    <img src={item.attributes.thumbnail?.original ?  item.attributes.thumbnail?.original : missing} key={item.id}/>\r\n                </div>\r\n                        \r\n                <div className=\"info-wrap\">\r\n                    <h5 className=\"ep-title\">{item.attributes.canonicalTitle}</h5>\r\n                    <h6 className=\"ep-number\">Episode {item.attributes.number}</h6>\r\n                </div>\r\n            </div>\r\n                        </>\r\n            )) : <div className='Spinner-wrap'><Spinner/></div>\r\n        }\r\n        </div>\r\n            <Pagination next={next}\r\n             prev={prev} last={last}\r\n             first={first} items={items}\r\n             itemsNb={itemsNb}\r\n             handlePage={(p)=>{fetchMovieData(p)}}/>\r\n    </div></>\r\n    )}\r\n\r\nexport default Episodes\r\n","import React,{useState} from 'react'\r\nimport axios from 'axios'\r\nimport './App.css'\r\nimport {BrowserRouter as Router, Switch, Route, Link, useHistory, HashRouter } from 'react-router-dom';\r\nimport { Favorite } from '@material-ui/icons';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nimport NavBar from './components/NavBar';\r\nimport AnimeDetails from './components/AnimeDetails';\r\n\r\n// Decorative Icons\r\nimport Home from './components/Home'\r\nimport Search from './components/Search'\r\nimport About from './components/About'\r\nimport Highestrated from './pages/Highestrated';\r\nimport Mostpopular from './pages/Mostpopular';\r\nimport Trending from './pages/Trending';\r\nimport Topupcoming from './pages/Topupcoming';\r\nimport Topcurrent from './pages/Topcurrent';\r\nimport Categories from './pages/Categories';\r\nimport Characters from './pages/Characters';\r\nimport Saga from './pages/Saga';\r\nimport Episodes from './pages/Episodes';\r\n\r\n\r\nexport default function App() {\r\n     \r\n\r\n      // const indexOfLastItem = currentPage * PageLimit;\r\n      // const indexOfFirstItem = indexOfLastItem - PageLimit;\r\n      // // const currentItems = items.slice(indexOfFirstItem, indexOfLastItem);    \r\n\r\n      // const paginate = (pageNumber, offset) => {\r\n      //   setPageOffset(pageNumber);\r\n      //   setCurrentPage(offset)};\r\n      \r\n      // // const SEARCH_API=`https://kitsu.io/api/edge/${Media}/?filter[${Filter}]=${query}?page[limit]=${PageLimit}&page[offset]=${PageOffset}`\r\n      // const FEATURED_API=`https:kitsu.io/api/edge/anime?page[limit]=${PageLimit}&sort=${Sort}`\r\n      // // const BASE_API=`https://kitsu.io/api/edge/anime/?filter[${Filter}]=${query}?page[limit]=${PageLimit}&page[offset]=${PageOffset}&sort=${Sort}`\r\n      // //adveanced popular = `https://kitsu.io/api/edge/anime?fields[${Media}]=slug,canonicalTitle,titles,posterImage,description,averageRating,startDate,popularityRank,ratingRank,youtubeVideoId&page[offset]=${PageOffset}&page[limit]=${PageLimit}&sort=-user_count`\r\n\r\n      const [PageOffset, setPageOffset] = useState(0);\r\n      const [query, setQuery] = useState('');\r\n      const history = useHistory();\r\n\r\n  return (   \r\n      <Router>\r\n\r\n      <div className=\"App\">\r\n      \r\n      <NavBar/>\r\n      \r\n      {/* <div className=\"mylinks-wrap\">\r\n            <div className=\"mylinks\">\r\n              <Link to=\"/\"><button><HomeIcon style={{ color: purple[100] }}></HomeIcon>Home</button></Link>\r\n\r\n              <Link to={\r\n                  {\r\n                    pathname: \"/Search\",\r\n                    state: { \r\n                    from :\"root\" \r\n                    }                    \r\n                  }\r\n                }\r\n                ><button><SearchIcon style={{ color: purple[100] }}></SearchIcon>Search</button></Link>\r\n\r\n              <Link to={{pathname: \"/About\"}}><button><AboutIcon style={{ color: purple[100] }}></AboutIcon>About</button></Link>\r\n            </div>\r\n          </div> */}\r\n       \r\n       <Switch>\r\n          <Route key=\"1\" path=\"/\" exact component={Home}/>\r\n          <Route key=\"2\" path=\"/Search\" exact component={Search}/>\r\n          <Route key=\"3\" path=\"/About\" exact component={About}/>\r\n          <Route key=\"4\" path=\"/anime/:slug\" exact component={AnimeDetails}/>\r\n          <Route key=\"5\" path=\"/explore/anime/highest-rated\" exact component={Highestrated}/>\r\n          <Route key=\"6\" path=\"/explore/anime/most-popular\" exact component={Mostpopular}/>\r\n          <Route key=\"7\" path=\"/explore/anime/top-current\" exact component={Topcurrent}/>\r\n          <Route key=\"8\" path=\"/explore/anime/top-upcoming\" exact component={Topupcoming}/>\r\n          <Route key=\"9\" path=\"/explore/anime/trending\" exact component={Trending}/>\r\n          <Route key=\"10\" path=\"/anime/categories/:category\" exact component={Categories}/>\r\n          <Route key=\"11\" path=\"/anime/:anime/characters\" exact component={Characters}/>\r\n          <Route key=\"12\" path=\"/anime/:anime/saga\" exact component={Saga}/>\r\n          <Route key=\"13\" path=\"/anime/:anime/episode\" exact component={Episodes}/>\r\n       </Switch>\r\n\r\n       <section className=\"myFooter\">\r\n          <div className=\"credits\">\r\n          © 2020, made with <Favorite style={{ color: red[800] }}></Favorite>\r\n          by <a href=\"http://github.com/Amine-Hmi\">Amine Hammami</a>\r\n          </div>\r\n        </section> \r\n\r\n       \r\n      {/* <Pagination \r\n      getPageLimit= {PageLimit} //reset pageoffset upon every new search\r\n      paginate = {paginate}\r\n      pages={PagesCount}\r\n      currentPage = {currentPage}\r\n      />\r\n     */}\r\n\r\n\r\n      </div>\r\n      </Router>\r\n\r\n  );\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n  <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/missing.e599c875.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.2fd48a92.png\";","module.exports = __webpack_public_path__ + \"static/media/default_cover.22e5f56b.png\";","module.exports = __webpack_public_path__ + \"static/media/spinner3.cf806952.gif\";"],"sourceRoot":""}